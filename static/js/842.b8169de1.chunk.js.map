{"version":3,"file":"static/js/842.b8169de1.chunk.js","mappings":"+SACMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,qCAAwCD,IADxC,cACjBG,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACDL,EAAAA,EAAAA,IAAA,+BACKD,EADL,iCACqCM,EADrC,gCADC,cAClBH,EADkB,yBAIfA,EAASC,MAJM,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBACVO,EADU,oBACIR,EADJ,oBADI,cACrBG,EADqB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBACVO,EADU,4BACYR,EADZ,oBADI,cACrBG,EADqB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOfM,EAAU,mCAAG,WAAMF,GAAN,uFACCP,EAAAA,EAAAA,IAAA,gBACVO,EADU,4BACYR,EADZ,2BADD,cAChBG,EADgB,yBAIbA,EAASC,MAJI,2CAAH,qD,uFCDvB,UAzBa,WACX,OAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,MAAce,MAAK,SAAAb,GACjBS,EAAeT,EAAKc,QACrB,GACF,GAAE,KAGD,6BACE,SAAC,KAAD,UAAO,qBACP,SAAC,KAAD,UACGN,EAAYO,KAAI,SAAAC,GAAK,OACpB,yBACE,SAAC,KAAD,CAAWC,GAAE,kBAAaD,EAAMZ,IAAMc,MAAO,CAAEC,KAAMT,GAArD,SACGM,EAAMI,gBAAkBJ,EAAMK,QAF1BL,EAAMZ,GADK,QAU7B,C,2IC1BYkB,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yKASTE,EAAYF,EAAAA,GAAAA,GAAH,8HAQTG,EAAQH,EAAAA,GAAAA,GAAH,iE","sources":["components/Api/Api.jsx","components/Home/Home.jsx","components/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'af0d5f243de6f7a5bfa482911cb42a9e';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const searchMovies = async query => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n      );\n      return response.data;\n};\n\nexport const getMovieDetails = async id => {\n    const response = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n      );\n      return response.data;\n};\n\nexport const getMovieCredits = async id => {\n    const response = await axios.get(\n        `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      return response.data;\n};\n\nexport const getReviews = async id => {\n    const response = await axios.get(\n        `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n      );\n      return response.data;\n    }; \n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieLink, MovieList, Title } from './Home.styled';\nimport { getTrending } from '../Api/Api';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrending().then(data => {\n      setTrendMovies(data.results);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Title> Trending today</Title>\n      <MovieList>\n        {trendMovies.map(movie => (\n          <li key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title || movie.name}\n            </MovieLink>\n          </li>\n        ))}\n      </MovieList>\n    </main>\n  );\n};\nexport default Home;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;"],"names":["API_KEY","axios","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","useState","trendMovies","setTrendMovies","location","useLocation","useEffect","then","results","map","movie","to","state","from","original_title","name","MovieLink","styled","Link","MovieList","Title"],"sourceRoot":""}